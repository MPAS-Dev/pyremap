jobs:
- job:
  displayName: linux
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      conda config --add channels conda-forge
      conda config --set channel_priority strict
      conda create --yes --quiet --name build python=$PYTHON_VERSION conda conda-build
    displayName: Create Anaconda build environment

  - bash: |
      eval "$(conda shell.bash hook)"
      conda activate build
      conda build -m "ci/python${PYTHON_VERSION}.yaml" "recipe"
    displayName: Build pyremap

  - bash: |
      eval "$(conda shell.bash hook)"
      conda create --yes --quiet --name test --use-local python=$PYTHON_VERSION \
          pyremap pytest
    displayName: Create Anaconda test environment

  - bash: |
      eval "$(conda shell.bash hook)"
      conda activate test
      pytest --pyargs pyremap
    displayName: pytest

  - bash: |
      eval "$(conda shell.bash hook)"
      conda create --yes --quiet --name docs --use-local python=$PYTHON_VERSION \
          pyremap sphinx mock sphinx_rtd_theme m2r
    condition: eq(variables['python.version'], '3.8')
    displayName: Create Anaconda docs environment

  - bash: |
      eval "$(conda shell.bash hook)"
      conda activate docs

      echo "source branch: $(Build.SourceBranch)"
      echo "target branch: $(System.PullRequest.TargetBranch)"

      tag=$(git describe --tags $(git rev-list --tags --max-count=1))
      echo "tag: $tag"

      version=`python -c "import pyremap; print(pyremap.__version__)"`
      echo "version: $version"

      if [[ "$(Build.SourceBranch)" == "refs/heads/master" ]]; then
        export DOCS_VERSION="stable"
      elif [[ "$(Build.SourceBranch)" == refs/tags/* ]]; then
        # this is a tag build
        export DOCS_VERSION="$tag"
      else
        DOCS_VERSION="$version"
        export DOCS_VERSION
      fi
      echo "Docs version: $DOCS_VERSION"
      cd docs || exit 1
      make html
    condition: eq(variables['python.version'], '3.8')
    displayName: build and deploy docs

- job:
  displayName: osx
  pool:
    vmImage: 'macOS-10.14'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: |
      conda config --add channels conda-forge
      conda config --set channel_priority strict
      conda create --yes --quiet --name build python=$PYTHON_VERSION conda conda-build
    displayName: Create Anaconda build environment

  - bash: |
      eval "$(conda shell.bash hook)"
      conda activate build
      conda build -m "ci/python${PYTHON_VERSION}.yaml" "recipe"
    displayName: Build pyremap

  - bash: |
      eval "$(conda shell.bash hook)"
      conda create --yes --quiet --name test --use-local python=$PYTHON_VERSION pyremap \
          pytest sphinx mock sphinx_rtd_theme m2r
    displayName: Create Anaconda test environment

  - bash: |
      eval "$(conda shell.bash hook)"
      conda activate test
      pytest --pyargs pyremap
    displayName: pytest

