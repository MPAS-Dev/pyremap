name: CI/CD Build Workflow

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

env:
  CANCEL_OTHERS: false
  PATHS_IGNORE: '["**/README.md", "**/docs/**", "**/examples/**"]'

jobs:
  pre-commit-hooks:
    name: lint with pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: ${{ env.CANCEL_OTHERS }}
          paths_ignore: ${{ env.PATHS_IGNORE }}

      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - id: file_changes
        uses: trilom/file-changes-action@1.2.4
        with:
          output: ' '

      - # Run all pre-commit hooks on all the files.
        # Getting only staged files can be tricky in case a new PR is opened
        # since the action is run on a branch in detached head state
        name: Install and Run Pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}

  build:
    name: test pyremap - python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: ${{ env.CANCEL_OTHERS }}
          paths_ignore: ${{ env.PATHS_IGNORE }}

      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: "pyremap_ci"
          miniforge-variant: Miniforge3
          miniforge-version: latest
          channels: conda-forge
          channel-priority: strict
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install pyremap
        run: |
          conda create -n pyremap_dev --file dev-spec.txt \
            python=${{ matrix.python-version }}
          conda activate pyremap_dev
          python -m pip install -vv --no-deps --no-build-isolation .

      - name: Run Tests
        env:
          CHECK_IMAGES: False
        run: |
          conda activate pyremap_dev
          pytest --pyargs tests

